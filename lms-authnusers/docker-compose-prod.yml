services:
  users:
    image: lmsusers:latest
    container_name: users01_in_lms_network
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "5084-5088:8080"  # Expondo porta 5084 do host para 8080 do container
    environment:
      SPRING_PROFILES_ACTIVE: instance1,bootstrap
    networks:
      - lms_network
    volumes:
      - "users_data_volume:/tmp"  # Armazenando dados temporários ou persistentes
    deploy:
      replicas: 1  # Número de réplicas, que será alterado durante o scale
    privileged: true

  users_new:
    image: lmsusers:latest
    container_name: users02_in_lms_network
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5090-5094:8080"  #
    environment:
      SPRING_PROFILES_ACTIVE: instance1_new,bootstrap
    networks:
      - lms_network
    volumes:
      - "users_data_volume_new:/tmp"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    privileged: true
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  lms_network:
    external: true

volumes:
  users_data_volume:
  users_data_volume_new:
